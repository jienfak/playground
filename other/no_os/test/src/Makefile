CC = gcc
CFLAGS = -Wall -fno-builtin -nostdinc -nostdlib
LD = ld

OBJFILES = \
	loader.o \
	common/printf.o \
	common/screen.o \
	kernel.o

image:
	@echo "Creating 'hdd.img'..."
	@dd if=/dev/zero of=./hdd.img bs=512 count=16065 1>/dev/null 2>&1
	
	@echo "Creating botable frist FAT32 partition..."
	@losetup /dev/loop1 ./hdd.img
	@(echo c; echou; echo n; echo p; echo 1; echo ; echo ; echo a; echo 1; echo t \
	echo c; echo w; ) | fdisk /dev/loop1 1>/dev/null 2>&1 || true
	
	@echo "Mounting partition to /dev/loop2..."
	@losetup /dev/loop2 ./hdd.img \
	--ofset     `echo \`fdisk -lu /dev/loop1 | sed -n 10p | awk 'print $$3'\`*512 | bc` |
	--sizelimit `echo \`fdisk -lu /dev/loop1 | sed -n 10p | awk 'print $$4'\`*512 | bc`
	
	@losetup -d /dev/loop
	
	@echo "Format partition"
	@mkdosfs /dev/loop2
	
	@echo "Copy kernel and grub files on partition..."
	@mkdir -p tempdir
	@mount /dev/loop2 tempdir
	@mkdir tempdir/boot
	@cp -r grub tempdir/boot
	@cp kernel.bin tempdir/
	@sleep 1
	@umount /dev/loop2
	@rm -r tempdir
	@losetup -d /dev/loop2
	
	@echo "Installing GRUB..."
	@echo "device (hd0) hdd.img   \n \
		root  (hd0,0)         \n \
		setup (hd0)           \n \
		quit\n" | grub --batch 1>/dev/null
	@echo "Done!"

all: kernel.bin
rebuild: clean all

.s.o:
	as -o $@ $<

.c.o:
	$(CC) -Iinclude $(CFLAGS) -o $@ -c $<

kernel.bin: $(OBJFILES)
	$(LD) -T linker.ld -o $@ $^

clean:
	rm -f $(OBJFILES) hdd.img kernel.bin
