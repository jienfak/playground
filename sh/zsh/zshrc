# Jien's zshrc.
source $HOME/.profile

[[ -z $DISPLAY && $XDG_VTNR -eq 1 ]] && exec startx

# Xinit.

# Modules.
source $SHMODS/chores/hasprog.sh
source $SHMODS/chores/loseall.sh
source $SHMODS/chores/alifhas.sh

autoload -Uz compinit promptinit

compinit
promptinit
zstyle ':completion:*' menu select
#zstyle ':completion:*:manuals'   separate-sections true
#zstyle ':completion:*:manuals.*' insert-sections true
#zstyle ':completion:*:man:*'     menu yes select
setopt correct
# History configuration.
zshaddhistory() { whence ${${(z)1}[1]} >| /dev/null || return 1 }
HISTFILE=~/.zhistory
HISTSIZE=SAVEHIST=10000
setopt append_history
setopt extended_history
setopt histignorealldups
setopt histignorespace

setopt auto_cd
#setopt extended_glob
setopt nonomatch
setopt notify
setopt hash_list_all
setopt nohup
setopt nobeep
setopt noglobdots
setopt noshwordsplit



shpwd() {
  echo ${${:-/${(j:/:)${(M)${(s:/:)${(D)PWD:h}}#(|.)[^.]}}/${PWD:t}}//\/~/\~}
}

setopt PROMPT_SUBST
PROMPT="%F{yellow}%f%F{red}%n%f@%F{blue}%m%f:%F{yellow}%~%f%(!.#.$)"
RPROMPT="%F{red}[%f%F{brgreen}%T%f%F{red}]%f[%F{yellow}%?%f%F{blue}%L%f]"

#source ~/path/to/fsh/fast-syntax-highlighting.plugin.zsh
#zplugin light zdharma/fast-syntax-highlighting


my-backward-delete-word() {
    local WORDCHARS=${WORDCHARS/\//}
    zle backward-delete-word
}


# Git status.
git_custom_status(){
}

# Vi Mode.
bindkey -v

#bindkey '^P' up-history
#bindkey '^N' down-history
bindkey '^P' history-beginning-search-backward
bindkey '^N' history-beginning-search-forward
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
#bindkey '^w' backward-kill-word
zle -N my-backward-delete-word
bindkey '^W' my-backward-delete-word
bindkey '^r' history-incremental-search-backward

EPS1=$RPROMPT
function zle-line-init zle-keymap-select {
	VIM_PROMPT="%{$fg_bold[yellow]%} [% NORMAL]%  %{$reset_color%}"
	RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/}($(git_custom_status))$EPS1"
	zle reset-prompt
}

zle -N zle-line-init
zle -N zle-keymap-select
export KEYTIMEOUT=1


# Plugins.

set -A plugin_dirs \
	"/usr/share/" \
	"/usr/share/zsh/plugins"

set -A plugins \
	syntax-highlighting \
	autosuggestions

for plugin in $plugins ; do
	for dir in $plugin_dirs ; do
		file=$dir/zsh-$plugin/zsh-$plugin.zsh
		if [ -f $file ] ; then
			echo "[+]Got '$plugin' plugin from '$file';"
			source $file
			break
		fi
	done
done



ZSH_AUTOSUGGEST_STRATEGY="history"
bindkey '^ ' autosuggest-accept

#vi_mode_plugin="~/code/scripts/sh/zsh/plugins/vi-mode.plugin.zsh"
#if [ -f $vi_mode_plugin ] ; then
#	source $vi_mode_plugin
#fi

# Aliases.
#
alias edg="$VISUAL"
alias edgsu="$VISUAL"
alias ed="$EDITOR"
alias edsu="sudo $EDITOR"
alias l="ls      --color=always"
alias ll="ls -l  --color=always"
alias la="ls -la --color=always"
alias asdf="sudo loadkeys dvorak"
alias aoeu="sudo loadkeys us"
#alias "manpager"="$MANPAGER"

	#alifhas "ev"  "eval" # --description "Evaluate text."
	#alifhas "py"  "python" # --description "Python interpreter."
	#alifhas "py2" "python2" # --description "Python interpreter version 2."
	#alifhas "py3" "python3" # --description "Python interpreter version 3."
	#alifhas "pl6" "perl6" # --description "Perl6 interpreter."
	#alifhas "pl"  "perl" # --description "Perl5 interpreter."
	#alifhas "rb"  "ruby" # --description "Ruby interpreter."
	#alifhas "tcl" "tclsh" # --description "TCL interpreter."
	#alifhas "lsp" "clisp" # --description "LISP interpreter."
	#alifhas "f"   "gfortran" # --description "FORTRAN compiler."
	#alifhas "c"   "cc"
	#alifhas "cc"  "g++"

	alias "mnt"="sudo mount"
	alias "umnt"="sudo umount"

	alias "sudo"='sudo -p "\$->#_"'
	alias "info"='info --vi-keys'
	alias "ipython"="ipython --TerminlInteractiveShell.editing_mode=vi"
	alias "ipython2"="ipython2 --TerminalInteractiveShell.editing_mode=vi"
	alias "ipython3"="ipython3 --TerminalInteractiveShell.editing_mode=vi"

set -A grc_progs \
	cat cvs df digg gcc g++ ls ifconfig \
	make mount mtr netstat ping ps tail \
	traceroute wdiff blkid du dnf docker\
	docker-machine env id ip iostat last\
	lsattr lsblk lspci lsmod lsof getfacl\
	getsebool ulimit uptime nmap fdisk findmnt\
	free semanage sar ss sysctl systemctl stat showmount\
	tune2fs and tcpdump

if hasprog grc ; then
	for prog in $grc_progs ; do
		alias $prog="grc --colour=auto $prog"
	done
	alias ll="grc --colour=auto ls -l  --color=always"
	alias la="grc --colour=auto ls -al --color=always"
fi

# Functions.
source $SHMODS/interactive/helpa.sh # Automatic help getter.

if hasprog kdbrate ; then
	kbdrate -d 60 -r 300
fi

# LF.
#
if hasprog lf ; then
	LFCD="$XDG_CONFIG_HOME/lf/lfrc"
	#LFCD=""
	if [ -f $LFCD ]; then
		source $LFCD
	fi
fi

echo  FAK::Freedom:Anarchy:Knowledge::FAK
echo 'FAKYOU... why are you using zsh? Fish is better.'
