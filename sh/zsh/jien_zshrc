# Jien's zshrc.
source $HOME/.profile
autoload -Uz compinit promptinit
compinit
promptinit
zstyle ':completion:*' menu select
#zstyle ':completion:*:manuals'   separate-sections true
#zstyle ':completion:*:manuals.*' insert-sections true
#zstyle ':completion:*:man:*'     menu yes select
setopt correct

shpwd() {
  echo ${${:-/${(j:/:)${(M)${(s:/:)${(D)PWD:h}}#(|.)[^.]}}/${PWD:t}}//\/~/\~}
}

setopt PROMPT_SUBST
PROMPT="%F{yellow}%f%F{red}%n%f@%F{blue}%m%f:%F{yellow}%~%f%(!.#.$)"
RPROMPT="%F{red}[%f%F{brgreen}%T%f%F{red}]%f[%F{yellow}%?%f,%F{blue}%L%f]"

#source ~/path/to/fsh/fast-syntax-highlighting.plugin.zsh
#zplugin light zdharma/fast-syntax-highlighting


my-backward-delete-word() {
    local WORDCHARS=${WORDCHARS/\//}
    zle backward-delete-word
}


# Git status.
git_custom_status(){
}

# Vi Mode.
bindkey -v

bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
#bindkey '^w' backward-kill-word
zle -N my-backward-delete-word
bindkey '^W' my-backward-delete-word
bindkey '^r' history-incremental-search-backward

EPS1=$RPROMPT
function zle-line-init zle-keymap-select {
	VIM_PROMPT="%{$fg_bold[yellow]%} [% NORMAL]%  %{$reset_color%}"
	RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/}($(git_custom_status))$EPS1"
	zle reset-prompt
}

zle -N zle-line-init
zle -N zle-keymap-select
export KEYTIMEOUT=1


# Highlight plugin.
plugin_dir1="/usr/share/zsh/plugins"
plugin_dir2="/usr/share"
if [ -f $plugin_dir1/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
	echo "Got it from first."
	source $plugin_dir1/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
else
	if [ -f $plugin_dir2/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
		echo  "Got it from second"
		source $plugin_dir2/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
	else
		echo "Could not get plugin."
	fi
fi

# Autosuggestion plugin.
if [ -f $plugin_dir1/zsh-autosuggestions/zsh-autosuggestions.zsh ] ; then
	source $plugin_dir1/zsh-autosuggestions/zsh-autosuggestions.zsh
else
	if [ -f $plugin_dir2/zsh-autosuggestions/zsh-autosuggestions.zsh ] ; then
		source $plugin_dir2/zsh-autosuggestions/zsh-autosuggesions.zsh
	fi
fi
ZSH_AUTOSUGGEST_STRATEGY="history"
bindkey '^ ' autosuggest-accept

#vi_mode_plugin="~/code/scripts/sh/zsh/plugins/vi-mode.plugin.zsh"
#if [ -f $vi_mode_plugin ] ; then
#	source $vi_mode_plugin
#fi

# Aliases.
#
alias edg="$VISUAL"
alias edgsu="$VISUAL"
alias ed="$EDITOR"
alias edsu="sudo $EDITOR"
alias "ls"="ls --color=always"
alias "la"="ls -al --color=always"
alias "ll"="ls --color -l"
alias "sctl"="sudo systemctl"
alias "manpager"="$MANPAGER"

	alias "ev"="eval" # --description "Evaluate text."
	alias "py"=$(which "python") # --description "Python interpreter."
	alias "py2"=$(which "python2") # --description "Python interpreter version 2."
	alias "py3"=$(which "python3") # --description "Python interpreter version 3."
	alias "pl6"=$(which "perl6") # --description "Perl6 interpreter."
	alias "pl"=$(which "perl") # --description "Perl5 interpreter."
	alias "rb"=$(which "ruby") # --description "Ruby interpreter."
	alias "tcl"=$(which "tclsh") # --description "TCL interpreter."
	alias "lsp"=$(which "clisp") # --description "LISP interpreter."
	alias "f"=$(which "gfortran") # --description "FORTRAN compiler."
	alias "c"=$(which "cc")
	alias "cc"=$(which "g++")

	alias "mnt"="sudo mount"
	alias "umnt"="sudo umount"

	alias "sudo"='sudo -p "\$->#_"'
	alias "info"='info --vi-keys'
	alias "ipython"="ipython --TerminalInteractiveShell.editing_mode=vi"
	alias "ipython2"="ipython2 --TerminalInteractiveShell.editing_mode=vi"
	alias "ipython3"="ipython3 --TerminalInteractiveShell.editing_mode=vi"

# Functions.
source $S/sh/sh/modules/helpa.sh

which kbdrate > /dev/null 2>&1
if test $status = 0 ; then
	kbdrate -d 60 -r 300
fi
echo  FAK::Freedom:Anarchy:Knowledge::FAK
echo 'FAKYOU... why are you using zsh? Fish is better.'
